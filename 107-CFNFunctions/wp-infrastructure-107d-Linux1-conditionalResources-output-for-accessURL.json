{
	"Parameters": {
		"SnapToRestore" : {
			"Type" : "String",
			"Default" : "",
			"Description" : "snap id to restore"
		},
		"EnvironmentSize": {
			"Type": "String",
			"Default": "SMALL",
			"AllowedValues": [
				"SMALL",
				"MEDIUM",
				"LARGE"
			],
			"Description": "Select Environment Size (S,M,L)"
		},
		"DatabaseName" : {
			"Type" : "String",
			"Default" : "wordpress"
		},
		"DatabaseUser" : {
			"Type" : "String",
			"Default" : "wordpress"
		},
		"DatabasePassword" : {
			"Type" : "String",
			"Default" : "w0rdpr355"
		}
	},
	"Conditions" : {
		"isLarge" : {"Fn::Equals" : [{"Ref" : "EnvironmentSize"}, "LARGE"]},
		"isntLarge" : {"Fn::Not" : [{"Fn::Equals" : [{"Ref" : "EnvironmentSize"}, "LARGE"]}]},
		"isRestore" : {"Fn::Not" : [{"Fn::Equals" : [{"Ref" : "SnapToRestore"}, ""]}]}
	},
	"Mappings": {
		"RegionMap": {
			"us-east-1"     : { "AMALINUX": "ami-0080e4c5bc078760e" },
			"us-east-2"     : { "AMALINUX": "ami-0cd3dfa4e37921605" },

			"us-west-1"     : { "AMALINUX": "ami-0ec6517f6edbf8044" },
			"us-west-2"     : { "AMALINUX": "ami-01e24be29428c15b2" },

      "sa-east-1"     : {	"AMALINUX": "ami-05145e0b28ad8e0b2"	},
			"ca-central-1"  : { "AMALINUX": "ami-07423fb63ea0a0930" },

			"eu-west-1"     : { "AMALINUX": "ami-08935252a36e25f85" },
			"eu-west-2"     : { "AMALINUX": "ami-01419b804382064e4"	},
      "eu-west-3"     : { "AMALINUX": "ami-0dd7e7ed60da8fb83"	},
      "eu-central-1"  : { "AMALINUX": "ami-0cfbf4f6db41068ac" },

			"ap-southeast-1": {	"AMALINUX": "ami-05b3bcf7f311194b3" },
			"ap-southeast-2": {	"AMALINUX": "ami-02fd0b06f06d93dfc"	},
      "ap-northeast-1": {	"AMALINUX": "ami-00a5245b4816c38e6"	},
			"ap-northeast-2": {	"AMALINUX": "ami-00dc207f8ba6dc919"	},
      "ap-south-1"    : {	"AMALINUX": "ami-0ad42f4f66f6c1cc9"	},

      "cn-north-1"    : {	"AMALINUX": "ami-8e6aa0e3"        	}
		},

		"InstanceSize": {
			"SMALL" : { "EC2": "t2.micro",  "DB": "db.t2.micro"  },
			"MEDIUM": { "EC2": "t2.small",  "DB": "db.t2.small"  },
			"LARGE" : { "EC2": "t2.medium", "DB": "db.t2.medium" }
		}
	},

	"Resources": {
		"DB": {
			"Type": "AWS::RDS::DBInstance",
			"Condition" : "isntLarge",
			"DeletionPolicy" : "Snapshot",
			"Properties": {
				"AllocatedStorage": 5,
				"StorageType" : "gp2",
				"DBInstanceClass": {"Fn::FindInMap" : ["InstanceSize", {"Ref" : "EnvironmentSize"}, "DB"]},
				"DBName": {"Fn::If" : ["isRestore", {"Ref" : "AWS::NoValue"}, {"Ref" : "DatabaseName"}]},
				"Engine": "MySQL",
				"MasterUsername": {"Fn::If" : ["isRestore", {"Ref" : "AWS::NoValue"}, {"Ref" : "DatabaseUser"}]},
				"MasterUserPassword": {"Fn::If" : ["isRestore", {"Ref" : "AWS::NoValue"}, {"Ref" : "DatabasePassword"}]},
				"DBSnapshotIdentifier" : {"Fn::If" : ["isRestore", {"Ref" : "SnapToRestore"}, {"Ref" : "AWS::NoValue"}]}
			}
		},
		"DBAuroraCluster" : {
			"Type" : "AWS::RDS::DBCluster",
			"DeletionPolicy" : "Snapshot",
			"Condition" : "isLarge",
			"Properties" : {
				"DatabaseName" : {"Fn::If" : ["isRestore", {"Ref" : "AWS::NoValue"}, {"Ref" : "DatabaseName"}]},
				"Engine" : "aurora",
				"MasterUsername" : {"Fn::If" : ["isRestore", {"Ref" : "AWS::NoValue"}, {"Ref" : "DatabaseUser"}]},
				"MasterUserPassword" : {"Fn::If" : ["isRestore", {"Ref" : "AWS::NoValue"}, {"Ref" : "DatabasePassword"}]},
				"SnapshotIdentifier" : {"Fn::If" : ["isRestore", {"Ref" : "SnapToRestore"}, {"Ref" : "AWS::NoValue"}]}
			}
		},
		"DBAurora" : {
			"Type" : "AWS::RDS::DBInstance",
			"Condition" : "isLarge",
			"Properties" : {
				"DBClusterIdentifier" : {"Ref" : "DBAuroraCluster"},
				"Engine" : "aurora",
				"DBInstanceClass" : {"Fn::FindInMap" : ["InstanceSize", {"Ref" : "EnvironmentSize"}, "DB"]}
			}
		},
		"EC2": {
			"Type": "AWS::EC2::Instance",
			"DeletionPolicy" : "Delete",
			"Properties": {
				"ImageId": {"Fn::FindInMap" : ["RegionMap", {"Ref" : "AWS::Region"}, "AMALINUX"]},
				"InstanceType": {"Fn::FindInMap" : ["InstanceSize", {"Ref" : "EnvironmentSize"}, "EC2"]},
				"KeyName" : "AdvancedCFN",
				"UserData" : {"Fn::Base64" : {"Fn::Join" : ["", [
						"#!/bin/bash", "\n",
						"yum update -y aws-cfn-bootstrap", "\n",
						"/opt/aws/bin/cfn-init -v",
						" --stack ", {"Ref" : "AWS::StackName"},
						" --resource EC2",
						" --configsets wordpress",
						" --region ", {"Ref" : "AWS::Region"}, "\n",
						"yum update -y", "\n",
						"/opt/aws/bin/cfn-signal -e $?",
						" --stack ", {"Ref" : "AWS::StackName"},
						" --resource EC2",
						" --region ", {"Ref" : "AWS::Region"}, "\n"
				]]}}
			},
			"CreationPolicy" : {
				"ResourceSignal" : {
					"Count" : "1",
					"Timeout" : "PT15M"
				}
			},
			"Metadata" : {
				"AWS::CloudFormation::Init" : {
					"configSets" : {
						"wordpress" : ["configure_cfn", "install_wordpress", "config_wordpress"]
					},
					"configure_cfn" : {
						"files" : {
							"/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
								"content" : {"Fn::Join" : ["", [
									"[cfn-auto-reloader-hook]\n",
									"triggers=post.update\n",
									"path=Resources.EC2.Metadata.AWS::CloudFormation::Init\n",
									"action=/opt/aws/bin/cfn-init -v",
									" --stack ", {"Ref" : "AWS::StackName"},
									" --resource EC2",
									" --configsets wordpress",
									" --region ", {"Ref" : "AWS::Region"}, "\n"
								]]},
								"mode" : "000400",
								"owner" : "root",
								"group" : "root"
							},
							"/etc/cfn/cfn-hup.conf" : {
								"content" : {"Fn::Join" : ["",[
									"[main]\n",
									"stack=", {"Ref" : "AWS::StackId"}, "\n",
									"region=", {"Ref" : "AWS::Region"}, "\n",
									"verbose=true\n",
									"interval=5\n"
								]]},
								"mode" : "000400",
								"owner" : "root",
								"group" : "root"								
							},
							"/var/www/html/index2.html" : {
								"content" : "test9"
							}
						},
						"services" : {
							"sysvinit" : {
								"cfn-hup" : {
									"enabled" : "true",
									"ensureRunning" : "true",
									"files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]
								}
							}
						}
					},
					"install_wordpress" : {
						"packages" : {
							"yum" : {
								"httpd" : [],
								"php" : [],
								"mysql" : [],
								"php-mysql" : []
							}
						},
						"sources" : {
							"/var/www/html" : "http://wordpress.org/latest.tar.gz"
						},
						"services" : {
							"sysvinit" : {
								"httpd" : {
									"enabled" : "true",
									"ensureRunning" : "true"
								}
							}
						}
					},
					"config_wordpress" : {
						"commands" : {
							"01_clone_config" : {
								"cwd" : "/var/www/html/wordpress",
								"test" : "test ! -e /var/www/html/wordpress/wp-config.php",
								"command" : "cp wp-config-sample.php wp-config.php"
							},
							"02_inject_dbhost" : {
								"cwd" : "/var/www/html/wordpress",
								"command" : {"Fn::If" : [
									"isntLarge",
									{"Fn::Join" : ["", [
										"sed -i 's/localhost/",
										{"Fn::GetAtt" : ["DB", "Endpoint.Address"]},
										"/g' wp-config.php"
									]]},
									{"Fn::Join" : ["", [
										"sed -i 's/localhost/",
										{"Fn::GetAtt" : ["DBAuroraCluster", "Endpoint.Address"]},
										"/g' wp-config.php"
									]]}									
								]}
							},
							"03_inject_dbname" : {
								"cwd" : "/var/www/html/wordpress",
								"command" : {"Fn::Join" : ["", [
									"sed -i 's/database_name_here/",
									{"Ref" : "DatabaseName"},
									"/g' wp-config.php"
								]]}
							},
							"04_inject_dbuser" : {
								"cwd" : "/var/www/html/wordpress",
								"command" : {"Fn::Join" : ["", [
									"sed -i 's/username_here/",
									{"Ref" : "DatabaseUser"},
									"/g' wp-config.php"
								]]}
							},
							"05_inject_dbpassword" : {
								"cwd" : "/var/www/html/wordpress",
								"command" : {"Fn::Join" : ["", [
									"sed -i 's/password_here/",
									{"Ref" : "DatabasePassword"},
									"/g' wp-config.php"
								]]}
							},
							"06_store_instance_ip" : {
								"cwd" : "/var/www/html/wordpress",
								"command" : "curl http://169.254.169.254/latest/meta-data/public-ipv4 > ip.address"
							},
							"07a_inject_IP_1" : {
								"cwd" : "/var/www/html/wordpress",
								"command" : "myip=`cat ip.address` && echo \"define('WP_SITEURL', 'http://${myip}/wordpress');\" >> wp-config.php"
							},
							"07b_inject_IP_1" : {
								"cwd" : "/var/www/html/wordpress",
								"command" : "myip=`cat ip.address` && echo \"define('WP_HOME', 'http://${myip}/wordpress');\" >> wp-config.php"
							},
							"08a_inject_IP_1" : {
								"cwd" : "/var/www/html/wordpress",
								"command" : "myip=`cat ip.address` && echo \"update_option('siteurl','http://${myip}/wordpress');\" >> /var/www/html/wordpress/wp-content/themes/twentyseventeen/functions.php"
							},	
							"08b_inject_IP_1" : {
								"cwd" : "/var/www/html/wordpress",
								"command" : "myip=`cat ip.address` && echo \"update_option('home','http://${myip}/wordpress');\" >> /var/www/html/wordpress/wp-content/themes/twentyseventeen/functions.php"
							}																														
						}
					}
				}
			}
		},
		"S3": {
			"Type": "AWS::S3::Bucket",
			"DeletionPolicy" : "Retain"
		}
	},
	"Outputs" : {
		"wproot" : {
			"Description" : "Access URL for wordpress",
			"Value" : {"Fn::Join" : ["",["http://", {"Fn::GetAtt" : ["EC2", "PublicIp"]}, "/wordpress"]]}
		},
		"wpadmin" : {
			"Description" : "Admin Login URL - if restoring from snap, ALWAYS use this URL first",
			"Value" : {"Fn::Join" : ["",["http://", {"Fn::GetAtt" : ["EC2", "PublicIp"]}, "/wordpress/wp-login.php"]]}			
		}
	}
}
